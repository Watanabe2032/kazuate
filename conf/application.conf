
#
# You can declare variables and substitute for them:
#mykey = ${some.value}
#
# And if an environment variable exists when there is no other subsitution, then
# HOCON will fall back to substituting environment variable:
#mykey = ${JAVA_HOME}

## Akka

# Play uses Akka internally and exposes Akka Streams and actors in Websockets and
# other streaming HTTP responses.
akka {
  loglevel = "WARNING"
  #log-config-on-start = true
}

## Secret key
play.crypto.secret = "changeme"

## Modules
play.modules {
  #enabled += my.application.Module
  #disabled += ""
}

## IDE
play.i18n {
  # The application languages
  langs = [ "en" ]

  # Whether the language cookie should be secure or not
  #langCookieSecure = true

  # Whether the HTTP only attribute of the cookie should be set to true
  #langCookieHttpOnly = true
}

## Play HTTP settings
# ~~~~~
play.http {
  ## Router
  #router = my.application.Router

  ## Action Creator
  #actionCreator = null

  ## ErrorHandler
  # If null, will attempt to load a class called ErrorHandler in the root package,
  #errorHandler = null

  ## Filters
  #filters = my.application.Filters

  ## Session & Flash
  session {
    # Sets the cookie to be sent only over HTTPS.
    #secure = true

    # Sets the cookie to be accessed only by the server.
    #httpOnly = true
    #maxAge = 300

    # Sets the domain on the session cookie.
    #domain = "example.com"
  }

  flash {
    # Sets the cookie to be sent only over HTTPS.
    #secure = true

    # Sets the cookie to be accessed only by the server.
    #httpOnly = true
  }
}

## Netty Provider
play.server.netty {
  # Whether the Netty wire should be logged
  #log.wire = true
  #transport = "native"
}

## WS (HTTP Client)
# libraryDependencies += ws // or javaWs if using java
#
play.ws {
  # Sets HTTP requests not to follow 302 requests
  #followRedirects = false

  # Sets the maximum number of open HTTP connections for the client.
  #ahc.maxConnectionsTotal = 50

  ## WS SSL
  ssl {
    #debug.handshake = true
    #trustManager = {
    #  stores = [
    #    { type = "JKS", path = "exampletrust.jks" }
    #  ]
    #}
  }
}

## Cache
# libraryDependencies += cache
#
play.cache {
  # If you want to bind several caches, you can bind the individually
  #bindCaches = ["db-cache", "user-cache", "session-cache"]
}

## Filters
# libraryDependencies += filters
#
play.filters {
  cors {
    # Filter paths by a whitelist of path prefixes
    #pathPrefixes = ["/some/path", ...]

    # The allowed origins. If null, all origins are allowed.
    #allowedOrigins = ["http://www.example.com"]

    # The allowed HTTP methods. If null, all methods are allowed
    #allowedHttpMethods = ["GET", "POST"]
  }

  ## CSRF Filter
  csrf {
    # Sets the cookie to be sent only over HTTPS
    #cookie.secure = true

    # Defaults to CSRFErrorHandler in the root package.
    #errorHandler = MyCSRFErrorHandler
  }

  ## Security headers filter configuration
  headers {
    #frameOptions = "DENY"
    #xssProtection = "1; mode=block"
    #contentTypeOptions = "nosniff"
    #permittedCrossDomainPolicies = "master-only"
    #contentSecurityPolicy = "default-src 'self'"
  }

  ## Allowed hosts filter configuration
  hosts {
    # Allow requests to example.com, its subdomains, and localhost:9000.
    #allowed = [".example.com", "localhost:9000"]
  }
}

## Evolutions
# libraryDependencies += evolutions
#
play.evolutions {
  # You can disable evolutions for a specific datasource if necessary
  #db.default.enabled = false
}

## Database Connection Pool
# libraryDependencies += jdbc
#
play.db {
  # The combination of these two settings results in "db.default" as the
  # default JDBC pool:
  #config = "db"
  #default = "default"

  # Play uses HikariCP as the default connection pool.  You can override
  # settings by changing the prototype:
  prototype {
    # Sets a fixed JDBC connection pool size of 50
    #hikaricp.minimumIdle = 50
    #hikaricp.maximumPoolSize = 50
  }
}

## JDBC Datasource
db {
  #default.driver = com.mysql.jdbc.Driver
  #default.url = "jdbc:mysql://localhost/kazuate?characterEncoding=UTF8"
  #default.username = service
  #default.password = "sabisabi_596Sun"
  #default.logSql=true
}

#slick.dbs.default.driver="slick.driver.MySQLDriver$"
#slick.dbs.default.db.driver="com.mysql.jdbc.Driver"
#slick.dbs.default.db.url="jdbc:mysql://localhost/kazuate?user=root&password=password"
#slick.dbs.default.db.user=service
#slick.dbs.default.db.password="sabisabi_596Sun"
